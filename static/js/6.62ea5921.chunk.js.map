{"version":3,"sources":["hoc/withAuthRedirect.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/common/AddNewMessageForm/AddNewMessageForm.tsx","components/common/AddNewMessageForm/AddNewMessageForm.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","connect","props","restProps","to","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","AddNewMessageForm","validationSchema","Yup","shape","newMessageText","max","required","initialValues","onSubmit","values","addPost","errors","touched","className","s","formik","name","type","placeholder","inputError","input","buttonError","button","titleOfButton","spanError","module","exports","DialogItem","path","id","style","margin","color","Message","message","Dialogs","dialogsPage","dialogsElements","messages","map","d","messagesElements","m","dialogs","block","dialogsItems","sendMessage","compose","dispatch","newMessageBody","sendMessageAC"],"mappings":"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","file":"static/js/6.62ea5921.chunk.js","sourcesContent":["import React, {ComponentType} from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\n\r\ntype mapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStatePropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport function withAuthRedirect <T>(Component: ComponentType<T>) {\r\n    const RedirectComponent = (props: mapStatePropsType) => {\r\n        const{isAuth, ...restProps} = props\r\n\r\n        if (!isAuth) return <Redirect to={\"/login\"}/>\r\n\r\n        return <Component {...restProps as T}/>\r\n    }\r\n\r\n    const ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n\r\n    return ConnectedRedirectComponent;\r\n}","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from \"react\";\r\nimport s from \"./AddNewMessageForm.module.css\";\r\nimport * as Yup from \"yup\";\r\nimport {Field, Form, Formik, FormikHelpers} from \"formik\";\r\n\r\n\r\ntype FormMessageType = {\r\n    newMessageText: string\r\n}\r\n\r\ntype AddNewMessageFormType = {\r\n    addPost: (newMessageText: string) => void\r\n    placeholder: string\r\n    titleOfButton: string\r\n}\r\n\r\nconst AddNewMessageForm = (props: AddNewMessageFormType) => {\r\n\r\n    const submit = (values: FormMessageType) => {\r\n        props.addPost(values.newMessageText);\r\n        // values.newMessageText = \"\"\r\n    }\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        newMessageText: Yup.string()\r\n            // .min(2, 'Too short message!')\r\n            .max(100, 'Maximum length is 100 symbols!')\r\n            .required('Field is required')\r\n    });\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{newMessageText: \"\"}}\r\n            validationSchema={validationSchema}\r\n            onSubmit={submit}\r\n        >\r\n            {({errors, touched}) => (\r\n                <Form>\r\n                    <div className={s.formik}>\r\n                        <Field\r\n                            name=\"newMessageText\"\r\n                            type=\"text\"\r\n                            placeholder={props.placeholder}\r\n                            className={errors.newMessageText && touched.newMessageText ? s.inputError : s.input}\r\n                        />\r\n                        <button\r\n                            type=\"submit\"\r\n                            className={errors.newMessageText && touched.newMessageText ? s.buttonError : s.button}\r\n                        >{props.titleOfButton}\r\n                        </button>\r\n                    </div>\r\n                    <span className={errors.newMessageText && touched.newMessageText ? s.spanError : \"\"}>\r\n                        {errors.newMessageText && touched.newMessageText ?\r\n                            <div>{errors.newMessageText}</div> : null}\r\n                    </span>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default AddNewMessageForm;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formik\":\"AddNewMessageForm_formik__1jxWp\",\"input\":\"AddNewMessageForm_input__1VJnl\",\"inputError\":\"AddNewMessageForm_inputError__2aTd3\",\"button\":\"AddNewMessageForm_button__26kvF\",\"buttonError\":\"AddNewMessageForm_buttonError__2neke\",\"spanError\":\"AddNewMessageForm_spanError__DllhW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1QmhJ\",\"block\":\"Dialogs_block__ShHfD\",\"dialogsItems\":\"Dialogs_dialogsItems__KORHz\",\"active\":\"Dialogs_active__3uGbp\",\"messages\":\"Dialogs_messages__18dvD\",\"message\":\"Dialogs_message__1YtNp\",\"groopOfInputAndButton\":\"Dialogs_groopOfInputAndButton__3CrKZ\",\"textareaAndButton\":\"Dialogs_textareaAndButton__38uAu\",\"formik\":\"Dialogs_formik__136m4\"};","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {MessagesType} from \"../../../redux/dialogs-reducer\";\r\n\r\nexport const DialogItem = (props: MessagesType) => {\r\n    const path = \"/dialogs/\" + props.id;\r\n\r\n    return <div /*className={s.dialog + ' ' + s.active}*/ style={{margin: 5}}>\r\n        <NavLink to={path} style={{color: \"chocolate\"}}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\nimport {MessagesType} from \"../../../redux/dialogs-reducer\";\r\n\r\nexport const Message = (props: MessagesType) => {\r\n    return <div /*className={s.dialog}*/ style={{margin: 5}}>{props.message}</div>\r\n}\r\n","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport {DialogsPropsType} from \"./DialogsContainer\";\r\nimport {DialogItem} from \"./DialogItem/DialogItem\";\r\nimport {Message} from \"./Message/Message\";\r\nimport AddNewMessageForm from \"../common/AddNewMessageForm/AddNewMessageForm\";\r\n\r\nconst Dialogs = (props: DialogsPropsType) => {\r\n\r\n    const state = props.dialogsPage;\r\n\r\n    const dialogsElements = state.messages.map((d) => <DialogItem name={d.name} key={d.id} id={d.id} message={d.message}/>);\r\n    const messagesElements = state.messages.map((m) => <Message message={m.message} key={m.id} id={m.id} name={m.name}/>);\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.block}>\r\n                <div className={s.dialogsItems}>{dialogsElements}</div>\r\n                <div className={s.messages}>{messagesElements}</div>\r\n            </div>\r\n            <div className={s.formik}>\r\n                <AddNewMessageForm\r\n                    addPost={props.sendMessage}\r\n                    placeholder={\"Enter your message\"}\r\n                    titleOfButton={\"Send\"}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport {DialogsPageType, sendMessageAC} from \"../../redux/dialogs-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {compose, Dispatch} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport Dialogs from \"./Dialogs\";\r\n\r\ntype MapStatePropsType = {\r\n    dialogsPage: DialogsPageType\r\n}\r\nexport type MapDispatchPropsType = {\r\n    sendMessage: (newMessageBody: string) => void\r\n}\r\n\r\nexport type DialogsPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {dispatch(sendMessageAC(newMessageBody))}\r\n    }\r\n}\r\nexport default compose<React.ComponentType>(connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect)\r\n(Dialogs)\r\n\r\n"],"sourceRoot":""}