{"version":3,"sources":["hoc/withAuthRedirect.tsx","components/common/AddNewMessageForm/AddNewMessageForm.tsx","components/common/AddNewMessageForm/AddNewMessageForm.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","assets/images/postAvatar.png","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"names":["mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","connect","props","restProps","to","AddNewMessageForm","validationSchema","Yup","shape","newMessageText","max","required","initialValues","onSubmit","values","addPost","errors","touched","className","s","formik","name","type","placeholder","inputError","input","buttonError","button","titleOfButton","spanError","module","exports","Post","postsElements","posts","reverse","map","p","item","src","smallImage","postAvatar","message","likesCount","id","MyPosts","React","memo","postsBlock","header","MyPostContainer","profilePage","profile","photos","small","dispatch","addPostAC","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","Preloader","descriptionBlock","groopOfNameAndStatus","fullName","blockPhotoAndInfoUser","photo","large","userPhoto","isOwner","icon","faFileImage","buttonLoad","target","files","savePhoto","blockInfoUser","aboutMe","lookingForAJobDescription","lookingForAJob","style","margin","padding","href","contacts","github","vk","facebook","instagram","twitter","website","youtube","mainLink","Profile","updateStatusTC","savePhotoTC","ProfileContainer","userId","Number","this","match","params","authorizedUserId","getUserProfileTC","getStatusTC","refreshProfile","prevProps","prevState","compose","data","withRouter"],"mappings":"mMASMA,EAAkB,SAACC,GACrB,MAAO,CACHC,OAAQD,EAAME,KAAKD,SAIpB,SAASE,EAAqBC,GAWjC,OAFmCC,YAAQN,EAARM,EART,SAACC,GAA8B,IAC/CL,EAAwBK,EAAxBL,OAAWM,EADmC,YACtBD,EADsB,YAGpD,OAAKL,EAEE,cAACG,EAAD,eAAeG,IAFF,cAAC,IAAD,CAAUC,GAAI,gB,iCCnB1C,oDA4DeC,IA5CW,SAACH,GAEvB,IAIMI,EAAmBC,MAAaC,MAAM,CACxCC,eAAgBF,MAEXG,IAAI,IAAK,kCACTC,SAAS,uBAGlB,OACI,cAAC,IAAD,CACIC,cAAe,CAACH,eAAgB,IAChCH,iBAAkBA,EAClBO,SAfO,SAACC,GACZZ,EAAMa,QAAQD,EAAOL,iBAWrB,SAKK,gBAAEO,EAAF,EAAEA,OAAQC,EAAV,EAAUA,QAAV,OACG,eAAC,IAAD,WACI,sBAAKC,UAAWC,IAAEC,OAAlB,UACI,cAAC,IAAD,CACIC,KAAK,iBACLC,KAAK,OACLC,YAAarB,EAAMqB,YACnBL,UAAWF,EAAOP,gBAAkBQ,EAAQR,eAAiBU,IAAEK,WAAaL,IAAEM,QAElF,wBACIH,KAAK,SACLJ,UAAWF,EAAOP,gBAAkBQ,EAAQR,eAAiBU,IAAEO,YAAcP,IAAEQ,OAFnF,SAGEzB,EAAM0B,mBAGZ,sBAAMV,UAAWF,EAAOP,gBAAkBQ,EAAQR,eAAiBU,IAAEU,UAAY,GAAjF,SACKb,EAAOP,gBAAkBQ,EAAQR,eAC9B,8BAAMO,EAAOP,iBAAwB,e,oBCnDjEqB,EAAOC,QAAU,CAAC,OAAS,kCAAkC,MAAQ,iCAAiC,WAAa,sCAAsC,OAAS,kCAAkC,YAAc,uCAAuC,UAAY,uC,oBCArQD,EAAOC,QAAU,CAAC,WAAa,4BAA4B,OAAS,0B,oBCApED,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,sB,oBCApDD,EAAOC,QAAU,CAAC,iBAAmB,sCAAsC,qBAAuB,0CAA0C,SAAW,8BAA8B,OAAS,4BAA4B,sBAAwB,2CAA2C,MAAQ,2BAA2B,cAAgB,mCAAmC,WAAa,kC,8KCDjX,MAA0B,uC,OCU5BC,EAAO,SAAC9B,GAEjB,IAAM+B,EACF,YAAI/B,EAAMgC,OACLC,UACAC,KAAI,SAAAC,GAAC,OAAI,8BACF,sBAAKnB,UAAWC,IAAEmB,KAAlB,UACI,qBAAKC,IAAKrC,EAAMsC,WAAatC,EAAMsC,WAAaC,IAC/CJ,EAAEK,QACH,gCACI,yCAAmBL,EAAEM,kBALjBN,EAAEO,OAW9B,OACI,qBAAK1B,UAAWC,IAAEe,MAAlB,SACKD,K,SCFEY,EAnBCC,IAAMC,MAAuB,SAAA7C,GAEzC,OACI,sBAAKgB,UAAWC,IAAE6B,WAAlB,UACI,oBAAI9B,UAAWC,IAAE8B,OAAjB,sBACA,gCACI,cAAC5C,EAAA,EAAD,CACIU,QAASb,EAAMa,QACfQ,YAAa,eACbK,cAAe,aAEnB,cAAC,EAAD,CAAMM,MAAOhC,EAAMgC,MACbM,WAAYtC,EAAMsC,sBCS3BU,EAAkBjD,aAZP,SAACL,GACrB,MAAO,CACHsC,MAAOtC,EAAMuD,YAAYjB,MACzBM,WAAY5C,EAAMuD,YAAYC,QAAQC,OAAOC,UAG1B,SAACC,GACxB,MAAO,CACHxC,QAAS,SAACN,GAAoB8C,EAASC,YAAU/C,QAI1BR,CAA6C4C,G,kCCwB7DY,EA3CgB,SAACvD,GAA4B,IAAD,EAEvBwD,oBAAS,GAFc,mBAEhDC,EAFgD,KAEtCC,EAFsC,OAG3BF,mBAASxD,EAAM2D,QAHY,mBAGhDA,EAHgD,KAGxCC,EAHwC,KAKvDC,qBAAU,WACND,EAAU5D,EAAM2D,UACjB,CAAC3D,EAAM2D,SAeV,OACI,iCACMF,GACF,8BACI,sBAAMK,cAjBG,WACjBJ,GAAY,IAgBJ,SAAoC1D,EAAM2D,QAAU,wBAGvDF,GACD,8BACI,uBAAOM,SAbI,SAACC,GACpBJ,EAAUI,EAAEC,cAAcC,QAaXC,WAAW,EACXC,OApBQ,WACvBV,GAAY,GACZ1D,EAAMqE,aAAaV,IAmBJO,MAAOP,U,0BC8CfW,EAxEK,SAACtE,GAEjB,IAAKA,EAAMkD,QACP,OAAO,cAACqB,EAAA,EAAD,IASX,OACI,8BACI,sBAAKvD,UAAWC,IAAEuD,iBAAlB,UACI,sBAAKxD,UAAWC,IAAEwD,qBAAlB,UACI,qBAAKzD,UAAWC,IAAEyD,SAAlB,SACK1E,EAAMkD,QAAQwB,WAEnB,qBAAK1D,UAAWC,IAAE0C,OAAlB,SACI,cAAC,EAAD,CAAwBT,QAASlD,EAAMkD,QAASS,OAAQ3D,EAAM2D,OACtCU,aAAcrE,EAAMqE,oBAGpD,sBAAKrD,UAAWC,IAAE0D,sBAAlB,UACI,sBAAK3D,UAAWC,IAAE2D,MAAlB,UACQ,qBAAKvC,IAAmC,MAA9BrC,EAAMkD,QAAQC,OAAO0B,MAAgB7E,EAAMkD,QAAQC,OAAO0B,MAAQC,MAC3E9E,EAAM+E,QACD,kCACE,cAAC,IAAD,CAAiBC,KAAMC,IAAajE,UAAWC,IAAEiE,aACjD,uBAAO9D,KAAK,OAAO2C,SAxBvB,SAACC,GACrBA,EAAEmB,OAAOC,OACTpF,EAAMqF,UAAUrB,EAAEmB,OAAOC,MAAM,UAwBT,MAGd,sBAAKpE,UAAWC,IAAEqE,cAAlB,UACI,gCAAK,2CAAL,IAAwBtF,EAAMkD,QAAQqC,WACtC,gCAAK,kDAAL,IAA+BvF,EAAMkD,QAAQsC,6BAC7C,gCAAK,gDAAL,IAA6BxF,EAAMkD,QAAQuC,eAAiB,eAAiB,UAC7E,qBAAIC,MAAO,CAACC,OAAQ,GAAIC,QAAS,GAAjC,UAAqC,yCAArC,IACI,+BAAI,yCAAJ,IAAoB,mBAChBC,KAAM7F,EAAMkD,QAAQ4C,SAASC,OADb,SACqB,4BAAI/F,EAAMkD,QAAQ4C,SAASC,QAAU,UAE9E,+BAAI,qCAAJ,IAAgB,mBACZF,KAAM7F,EAAMkD,QAAQ4C,SAASE,GADjB,SACqB,4BAAIhG,EAAMkD,QAAQ4C,SAASE,IAAM,UAEtE,+BAAI,2CAAJ,IAAsB,mBAClBH,KAAM7F,EAAMkD,QAAQ4C,SAASG,SADX,SACqB,4BAAIjG,EAAMkD,QAAQ4C,SAASG,UAAY,UAElF,+BAAI,4CAAJ,IAAuB,mBACnBJ,KAAM7F,EAAMkD,QAAQ4C,SAASI,UADV,SACqB,4BAAIlG,EAAMkD,QAAQ4C,SAASI,WAAa,UAEpF,+BAAI,0CAAJ,IAAqB,mBACjBL,KAAM7F,EAAMkD,QAAQ4C,SAASK,QADZ,SACqB,4BAAInG,EAAMkD,QAAQ4C,SAASK,SAAW,UAEhF,+BAAI,0CAAJ,IAAqB,mBACjBN,KAAM7F,EAAMkD,QAAQ4C,SAASM,QADZ,SACqB,4BAAIpG,EAAMkD,QAAQ4C,SAASM,SAAW,UAEhF,+BAAI,0CAAJ,IAAqB,mBACjBP,KAAM7F,EAAMkD,QAAQ4C,SAASO,QADZ,SACqB,4BAAIrG,EAAMkD,QAAQ4C,SAASO,SAAW,UAEhF,+BAAI,2CAAJ,IAAsB,mBAClBR,KAAM7F,EAAMkD,QAAQ4C,SAASQ,SADX,SACqB,4BAAItG,EAAMkD,QAAQ4C,SAASQ,UAAY,yBC5D/FC,EAdC,SAACvG,GACb,OACI,gCACI,cAAC,EAAD,CAAakD,QAASlD,EAAMkD,QACfS,OAAQ3D,EAAM2D,OACdU,aAAcrE,EAAMwG,eACpBzB,UAAS/E,EAAM+E,SAAU/E,EAAM+E,QAC/BM,UAAWrF,EAAMyG,cAE9B,cAACzD,EAAD,Q,SCgBN0D,E,oKAEF,WAEI,IAAIC,EAASC,OAAOC,KAAK7G,MAAM8G,MAAMC,OAAOJ,QACvCA,IACDA,EAASE,KAAK7G,MAAMgH,kBAKxBH,KAAK7G,MAAMiH,iBAAiBN,GAC5BE,KAAK7G,MAAMkH,YAAYP,K,+BAG3B,WACIE,KAAKM,mB,gCAGT,SAAmBC,EAAgCC,GAC3CR,KAAK7G,MAAM8G,MAAMC,OAAOJ,SAAWS,EAAUN,MAAMC,OAAOJ,QAC1DE,KAAKM,mB,oBAGb,WACI,OACI,cAAC,EAAD,2BAAaN,KAAK7G,OAAlB,IACSkD,QAAS2D,KAAK7G,MAAMkD,QACpBS,OAAQkD,KAAK7G,MAAM2D,OACnB6C,eAAgBK,KAAK7G,MAAMwG,eAC3BzB,SAAU8B,KAAK7G,MAAM8G,MAAMC,OAAOJ,OAClCF,YAAaI,KAAK7G,MAAMyG,mB,GA/Bd7D,IAAM9C,WA8CtBwH,4BACXvH,aAVoB,SAACL,GACrB,MAAO,CACHwD,QAASxD,EAAMuD,YAAYC,QAC3BS,OAAQjE,EAAMuD,YAAYU,OAC1BqD,iBAAkBtH,EAAME,KAAK2H,KAAKZ,OAClChH,OAAQD,EAAME,KAAKD,UAMnB,CACIsH,qBACAC,gBACAV,mBACAC,kBACAe,IAAY3H,IAPTyH,CAO2BZ","file":"static/js/4.bf07756a.chunk.js","sourcesContent":["import React, {ComponentType} from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\n\r\ntype mapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStatePropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport function withAuthRedirect <T>(Component: ComponentType<T>) {\r\n    const RedirectComponent = (props: mapStatePropsType) => {\r\n        const{isAuth, ...restProps} = props\r\n\r\n        if (!isAuth) return <Redirect to={\"/login\"}/>\r\n\r\n        return <Component {...restProps as T}/>\r\n    }\r\n\r\n    const ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n\r\n    return ConnectedRedirectComponent;\r\n}","import React from \"react\";\r\nimport s from \"./AddNewMessageForm.module.css\";\r\nimport * as Yup from \"yup\";\r\nimport {Field, Form, Formik} from \"formik\";\r\n\r\n\r\ntype FormMessageType = {\r\n    newMessageText: string\r\n}\r\n\r\ntype AddNewMessageFormType = {\r\n    addPost: (newMessageText: string) => void\r\n    placeholder: string\r\n    titleOfButton: string\r\n}\r\n\r\nconst AddNewMessageForm = (props: AddNewMessageFormType) => {\r\n\r\n    const submit = (values: FormMessageType) => {\r\n        props.addPost(values.newMessageText)\r\n    }\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        newMessageText: Yup.string()\r\n            // .min(2, 'Too short message!')\r\n            .max(100, 'Maximum length is 100 symbols!')\r\n            .required('Field is required')\r\n    });\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{newMessageText: \"\"}}\r\n            validationSchema={validationSchema}\r\n            onSubmit={submit}\r\n        >\r\n            {({errors, touched}) => (\r\n                <Form>\r\n                    <div className={s.formik}>\r\n                        <Field\r\n                            name=\"newMessageText\"\r\n                            type=\"text\"\r\n                            placeholder={props.placeholder}\r\n                            className={errors.newMessageText && touched.newMessageText ? s.inputError : s.input}\r\n                        />\r\n                        <button\r\n                            type=\"submit\"\r\n                            className={errors.newMessageText && touched.newMessageText ? s.buttonError : s.button}\r\n                        >{props.titleOfButton}\r\n                        </button>\r\n                    </div>\r\n                    <span className={errors.newMessageText && touched.newMessageText ? s.spanError : \"\"}>\r\n                        {errors.newMessageText && touched.newMessageText ?\r\n                            <div>{errors.newMessageText}</div> : null}\r\n                    </span>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default AddNewMessageForm;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formik\":\"AddNewMessageForm_formik__1jxWp\",\"input\":\"AddNewMessageForm_input__1VJnl\",\"inputError\":\"AddNewMessageForm_inputError__2aTd3\",\"button\":\"AddNewMessageForm_button__26kvF\",\"buttonError\":\"AddNewMessageForm_buttonError__2neke\",\"spanError\":\"AddNewMessageForm_spanError__DllhW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__QUewd\",\"header\":\"MyPosts_header__AFYWx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1oM6o\",\"posts\":\"Post_posts__3JLMp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3SVUt\",\"groopOfNameAndStatus\":\"ProfileInfo_groopOfNameAndStatus__RNhyv\",\"fullName\":\"ProfileInfo_fullName__a9d5B\",\"status\":\"ProfileInfo_status__qjBIM\",\"blockPhotoAndInfoUser\":\"ProfileInfo_blockPhotoAndInfoUser__3zzVx\",\"photo\":\"ProfileInfo_photo__bIzVm\",\"blockInfoUser\":\"ProfileInfo_blockInfoUser__WxX7-\",\"buttonLoad\":\"ProfileInfo_buttonLoad__3qKCj\"};","export default __webpack_public_path__ + \"static/media/postAvatar.efb4f6bc.png\";","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport {PostsType} from \"../../../../redux/profile-reducer\";\r\nimport postAvatar from \"../../../../assets/images/postAvatar.png\";\r\n\r\ntype PostPropsType = {\r\n    posts: Array<PostsType>\r\n    smallImage: string | null\r\n}\r\n\r\nexport const Post = (props: PostPropsType) => {\r\n\r\n    const postsElements =\r\n        [...props.posts]\r\n            .reverse()\r\n            .map(p => <div key={p.id} >\r\n                    <div className={s.item}>\r\n                        <img src={props.smallImage ? props.smallImage : postAvatar}/>\r\n                        {p.message}\r\n                        <div>\r\n                            <span>Like </span>{p.likesCount}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n\r\n    return (\r\n        <div className={s.posts}>\r\n            {postsElements}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport {MyPostsPropsType} from \"./MyPostsContainer\";\r\nimport {Post} from \"./Post/Post\";\r\nimport AddNewMessageForm from \"../../common/AddNewMessageForm/AddNewMessageForm\";\r\n\r\n\r\nconst MyPosts = React.memo<MyPostsPropsType>(props => {\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3 className={s.header}>My posts</h3>\r\n            <div>\r\n                <AddNewMessageForm\r\n                    addPost={props.addPost}\r\n                    placeholder={\"Your message\"}\r\n                    titleOfButton={\"Add post\"}\r\n                />\r\n                <Post posts={props.posts}\r\n                      smallImage={props.smallImage}\r\n                />\r\n            </div>\r\n            {/*<div className={s.posts}>{postsElements}</div>*/}\r\n        </div>)\r\n})\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\nimport {Dispatch} from \"redux\";\r\nimport {addPostAC, PostsType} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nexport type MapStatePropsType = {\r\n    posts: Array<PostsType>\r\n    smallImage: string | null\r\n}\r\ntype MapDispatchPropsType = {\r\n    addPost: (newMessageText: string) => void\r\n}\r\nexport type MyPostsPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        smallImage: state.profilePage.profile.photos.small\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        addPost: (newMessageText) => {dispatch(addPostAC(newMessageText))}\r\n    }\r\n}\r\n\r\nexport const MyPostContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport {ProfilesType} from \"../../../redux/profile-reducer\";\r\n\r\nexport type StatusPropsType = {\r\n    profile: ProfilesType\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nconst ProfileStatusWithHooks = (props: StatusPropsType) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateMode}>{props.status || \"I have not status\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange}\r\n                       autoFocus={true}\r\n                       onBlur={deactivateEditMode}\r\n                       value={status}\r\n                />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React, {ChangeEvent} from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport {ProfilesType} from \"../../../redux/profile-reducer\";\r\nimport {faFileImage} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\ntype ProfileInfoPropsType = {\r\n    profile: ProfilesType\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n    isOwner: boolean\r\n    savePhoto: (file: Blob) => void\r\n}\r\n\r\nconst ProfileInfo = (props: ProfileInfoPropsType) => {\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files) {\r\n            props.savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <div className={s.groopOfNameAndStatus}>\r\n                    <div className={s.fullName}>\r\n                        {props.profile.fullName}\r\n                    </div>\r\n                    <div className={s.status}>\r\n                        <ProfileStatusWithHooks profile={props.profile} status={props.status}\r\n                                                updateStatus={props.updateStatus}/>\r\n                    </div>\r\n                </div>\r\n                <div className={s.blockPhotoAndInfoUser}>\r\n                    <div className={s.photo}>\r\n                            <img src={props.profile.photos.large != null ? props.profile.photos.large : userPhoto}/>\r\n                            {props.isOwner\r\n                                ? <label>\r\n                                    <FontAwesomeIcon icon={faFileImage} className={s.buttonLoad}/>\r\n                                    <input type=\"file\" onChange={onMainPhotoSelected}/>\r\n                                </label>\r\n                                : \"\"\r\n                            }\r\n                    </div>\r\n                    <div className={s.blockInfoUser}>\r\n                        <div><b>About me: </b> {props.profile.aboutMe}</div>\r\n                        <div><b>Job Description: </b> {props.profile.lookingForAJobDescription}</div>\r\n                        <div><b>looking a job: </b> {props.profile.lookingForAJob ? \"Open to work\" : \"Busy\"}</div>\r\n                        <ul style={{margin: 10, padding: 5}}><b>Contacts</b>:\r\n                            <li><b>github: </b> <a\r\n                                href={props.profile.contacts.github}><i>{props.profile.contacts.github || \"\"}</i></a>\r\n                            </li>\r\n                            <li><b>vk: </b> <a\r\n                                href={props.profile.contacts.vk}><i>{props.profile.contacts.vk || \"\"}</i></a>\r\n                            </li>\r\n                            <li><b>facebook: </b> <a\r\n                                href={props.profile.contacts.facebook}><i>{props.profile.contacts.facebook || \"\"}</i></a>\r\n                            </li>\r\n                            <li><b>instagram: </b> <a\r\n                                href={props.profile.contacts.instagram}><i>{props.profile.contacts.instagram || \"\"}</i></a>\r\n                            </li>\r\n                            <li><b>twitter: </b> <a\r\n                                href={props.profile.contacts.twitter}><i>{props.profile.contacts.twitter || \"\"}</i></a>\r\n                            </li>\r\n                            <li><b>website: </b> <a\r\n                                href={props.profile.contacts.website}><i>{props.profile.contacts.website || \"\"}</i></a>\r\n                            </li>\r\n                            <li><b>youtube: </b> <a\r\n                                href={props.profile.contacts.youtube}><i>{props.profile.contacts.youtube || \"\"}</i></a>\r\n                            </li>\r\n                            <li><b>mainLink: </b> <a\r\n                                href={props.profile.contacts.mainLink}><i>{props.profile.contacts.mainLink || \"\"}</i></a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport {MyPostContainer} from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport {ProfileContainerPropsType} from \"./ProfileContainer\";\r\n\r\nconst Profile = (props: ProfileContainerPropsType) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatusTC}\r\n                         isOwner={props.isOwner ? props.isOwner : false}\r\n                         savePhoto={props.savePhotoTC}\r\n            />\r\n            <MyPostContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport {getStatusTC, getUserProfileTC, ProfilesType, savePhotoTC, updateStatusTC} from \"../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport Profile from \"./Profile\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\ntype PropsType = RouteComponentProps<PathParamsType> & ProfileContainerPropsType\r\n\r\ntype MapStatePropsType = {\r\n    profile: ProfilesType\r\n    status: string\r\n    authorizedUserId: number\r\n    isAuth: boolean\r\n    isOwner?: boolean\r\n}\r\ntype MapDispatchPropsType = {\r\n    getUserProfileTC: (userId: number) => void\r\n    getStatusTC: (userId: number) => void\r\n    updateStatusTC: (status: string) => void\r\n    savePhotoTC: (file: Blob) => void\r\n}\r\nexport type ProfileContainerPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n\r\n    refreshProfile() {\r\n        debugger\r\n        let userId = Number(this.props.match.params.userId);\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            // if (!userId) {\r\n            //     this.props.history.push(\"/login\");\r\n            // }\r\n        }\r\n        this.props.getUserProfileTC(userId);\r\n        this.props.getStatusTC(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<PropsType>, prevState: Readonly<{}>) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId)\r\n            this.refreshProfile();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatusTC={this.props.updateStatusTC}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     savePhotoTC={this.props.savePhotoTC}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.data.userId,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps,\r\n        {\r\n            getUserProfileTC,\r\n            getStatusTC,\r\n            updateStatusTC,\r\n            savePhotoTC\r\n        }), withRouter, withAuthRedirect)(ProfileContainer)"],"sourceRoot":""}