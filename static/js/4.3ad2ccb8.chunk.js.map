{"version":3,"sources":["components/common/AddNewMessageForm/AddNewMessageForm.tsx","components/common/AddNewMessageForm/AddNewMessageForm.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","hoc/withAuthRedirect.tsx","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","assets/images/postAvatar.png","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"names":["AddNewMessageForm","props","validationSchema","Yup","shape","newMessageText","max","required","initialValues","onSubmit","values","addPost","errors","touched","className","s","formik","name","type","placeholder","inputError","input","buttonError","button","titleOfButton","spanError","module","exports","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","connect","restProps","to","Post","posts","item","src","postAvatar","message","likesCount","MyPosts","React","memo","postsElements","reverse","map","p","id","postsBlock","header","MyPostContainer","profilePage","dispatch","addPostAC","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","descriptionBlock","groopOfNameAndStatus","fullName","blockPhotoAndInfoUser","Photo","photos","large","userPhoto","blockInfoUser","aboutMe","lookingForAJobDescription","lookingForAJob","style","margin","padding","href","contacts","github","vk","facebook","instagram","twitter","website","youtube","mainLink","Preloader","Profile","ProfileContainer","userId","Number","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","data","getUserProfileTC","getStatusTC","updateStatusTC","withRouter"],"mappings":"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","file":"static/js/4.3ad2ccb8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport s from \"./AddNewMessageForm.module.css\";\r\nimport * as Yup from \"yup\";\r\nimport {Field, Form, Formik} from \"formik\";\r\n\r\n\r\ntype FormMessageType = {\r\n    newMessageText: string\r\n}\r\n\r\ntype AddNewMessageFormType = {\r\n    addPost: (newMessageText: string) => void\r\n    placeholder: string\r\n    titleOfButton: string\r\n}\r\n\r\nconst AddNewMessageForm = (props: AddNewMessageFormType) => {\r\n\r\n    const submit = (values: FormMessageType) => {\r\n        props.addPost(values.newMessageText)\r\n    }\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        newMessageText: Yup.string()\r\n            // .min(2, 'Too short message!')\r\n            .max(100, 'Maximum length is 100 symbols!')\r\n            .required('Field is required')\r\n    });\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{newMessageText: \"\"}}\r\n            validationSchema={validationSchema}\r\n            onSubmit={submit}\r\n        >\r\n            {({errors, touched}) => (\r\n                <Form>\r\n                    <div className={s.formik}>\r\n                        <Field\r\n                            name=\"newMessageText\"\r\n                            type=\"text\"\r\n                            placeholder={props.placeholder}\r\n                            className={errors.newMessageText && touched.newMessageText ? s.inputError : s.input}\r\n                        />\r\n                        <button\r\n                            type=\"submit\"\r\n                            className={errors.newMessageText && touched.newMessageText ? s.buttonError : s.button}\r\n                        >{props.titleOfButton}\r\n                        </button>\r\n                    </div>\r\n                    <span className={errors.newMessageText && touched.newMessageText ? s.spanError : \"\"}>\r\n                        {errors.newMessageText && touched.newMessageText ?\r\n                            <div>{errors.newMessageText}</div> : null}\r\n                    </span>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default AddNewMessageForm;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formik\":\"AddNewMessageForm_formik__1jxWp\",\"input\":\"AddNewMessageForm_input__1VJnl\",\"inputError\":\"AddNewMessageForm_inputError__2aTd3\",\"button\":\"AddNewMessageForm_button__26kvF\",\"buttonError\":\"AddNewMessageForm_buttonError__2neke\",\"spanError\":\"AddNewMessageForm_spanError__DllhW\"};","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React, {ComponentType} from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\n\r\ntype mapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStatePropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport function withAuthRedirect <T>(Component: ComponentType<T>) {\r\n    const RedirectComponent = (props: mapStatePropsType) => {\r\n        const{isAuth, ...restProps} = props\r\n\r\n        if (!isAuth) return <Redirect to={\"/login\"}/>\r\n\r\n        return <Component {...restProps as T}/>\r\n    }\r\n\r\n    const ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n\r\n    return ConnectedRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__QUewd\",\"header\":\"MyPosts_header__AFYWx\",\"posts\":\"MyPosts_posts__1lD-U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1oM6o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3SVUt\",\"groopOfNameAndStatus\":\"ProfileInfo_groopOfNameAndStatus__RNhyv\",\"fullName\":\"ProfileInfo_fullName__a9d5B\",\"status\":\"ProfileInfo_status__qjBIM\",\"blockPhotoAndInfoUser\":\"ProfileInfo_blockPhotoAndInfoUser__3zzVx\",\"Photo\":\"ProfileInfo_Photo__2kqCo\",\"blockInfoUser\":\"ProfileInfo_blockInfoUser__WxX7-\"};","export default __webpack_public_path__ + \"static/media/postAvatar.efb4f6bc.png\";","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport {PostsType} from \"../../../../redux/profile-reducer\";\r\nimport postAvatar from \"../../../../assets/images/postAvatar.png\";\r\n\r\nexport const Post = (props: PostsType) => {\r\n\r\n    return (\r\n        <div className={s.posts}>\r\n            <div className={s.item}>\r\n                <img src={postAvatar}/>\r\n                {props.message}\r\n                <div>\r\n                    <span>Like </span>{props.likesCount}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport {MyPostsPropsType} from \"./MyPostsContainer\";\r\nimport {Post} from \"./Post/Post\";\r\nimport AddNewMessageForm from \"../../common/AddNewMessageForm/AddNewMessageForm\";\r\n\r\n\r\nconst MyPosts = React.memo<MyPostsPropsType>(props => {\r\n\r\n    const postsElements =\r\n        [...props.posts]\r\n            .reverse()\r\n            .map((p) => <Post key={p.id} id={p.id} message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3 className={s.header}>My posts</h3>\r\n            <div>\r\n                <AddNewMessageForm\r\n                    addPost={props.addPost}\r\n                    placeholder={\"Your message\"}\r\n                    titleOfButton={\"Add post\"}\r\n                />\r\n            </div>\r\n            <div className={s.posts}>{postsElements}</div>\r\n        </div>)\r\n})\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\nimport {Dispatch} from \"redux\";\r\nimport {addPostAC, PostsType} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\ntype MapStatePropsType = {\r\n    posts: Array<PostsType>\r\n}\r\ntype MapDispatchPropsType = {\r\n    addPost: (newMessageText: string) => void\r\n}\r\nexport type MyPostsPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        addPost: (newMessageText) => {dispatch(addPostAC(newMessageText))}\r\n    }\r\n}\r\n\r\nexport const MyPostContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport {StatusPropsType} from \"../ProfileContainer\";\r\n\r\nconst ProfileStatusWithHooks = (props: StatusPropsType) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateMode}>{props.status || \"I have not status\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange}\r\n                       autoFocus={true}\r\n                       onBlur={deactivateEditMode}\r\n                       value={status}\r\n                />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\nimport {StatusPropsType} from \"../ProfileContainer\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\n\r\nconst ProfileInfo = (props: StatusPropsType) => {\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <div className={s.groopOfNameAndStatus}>\r\n                    <div className={s.fullName}>\r\n                        {props.profile.fullName}\r\n                    </div>\r\n                    <div className={s.status}>\r\n                        <ProfileStatusWithHooks profile={props.profile} status={props.status}\r\n                                                updateStatus={props.updateStatus}/>\r\n                    </div>\r\n                </div>\r\n                <div className={s.blockPhotoAndInfoUser}>\r\n                    <div className={s.Photo}>\r\n                        <div>\r\n                            <img src={props.profile.photos.large != null ? props.profile.photos.large : userPhoto}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className={s.blockInfoUser}>\r\n                        <div><b>About me: </b> {props.profile.aboutMe}</div>\r\n                        <div><b>Job Description: </b> {props.profile.lookingForAJobDescription}</div>\r\n                        <div><b>looking a job: </b> {props.profile.lookingForAJob ? \"Open to work\" : \"Busy\"}</div>\r\n                        <ul style={{margin: 10, padding: 5}}><b>Contacts</b>:\r\n                            <li><b>github: </b> <a\r\n                                href={props.profile.contacts.github}><i>{props.profile.contacts.github || \"\"}</i></a>\r\n                            </li>\r\n                            <li><b>vk: </b> <a\r\n                                href={props.profile.contacts.vk}><i>{props.profile.contacts.vk || \"\"}</i></a>\r\n                            </li>\r\n                            <li><b>facebook: </b> <a\r\n                                href={props.profile.contacts.facebook}><i>{props.profile.contacts.facebook || \"\"}</i></a>\r\n                            </li>\r\n                            <li><b>instagram: </b> <a\r\n                                href={props.profile.contacts.instagram}><i>{props.profile.contacts.instagram || \"\"}</i></a>\r\n                            </li>\r\n                            <li><b>twitter: </b> <a\r\n                                href={props.profile.contacts.twitter}><i>{props.profile.contacts.twitter || \"\"}</i></a>\r\n                            </li>\r\n                            <li><b>website: </b> <a\r\n                                href={props.profile.contacts.website}><i>{props.profile.contacts.website || \"\"}</i></a>\r\n                            </li>\r\n                            <li><b>youtube: </b> <a\r\n                                href={props.profile.contacts.youtube}><i>{props.profile.contacts.youtube || \"\"}</i></a>\r\n                            </li>\r\n                            <li><b>mainLink: </b> <a\r\n                                href={props.profile.contacts.mainLink}><i>{props.profile.contacts.mainLink || \"\"}</i></a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport {MyPostContainer} from \"./MyPosts/MyPostsContainer\";\r\nimport {StatusPropsType} from \"./ProfileContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props: StatusPropsType) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}\r\n            />\r\n            <MyPostContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport {getStatusTC, getUserProfileTC, ProfilesType, updateStatusTC} from \"../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport Profile from \"./Profile\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\nexport type StatusPropsType = {\r\n    profile: ProfilesType\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\ntype PropsType = RouteComponentProps<PathParamsType> & ProfileContainerPropsType\r\n\r\ntype MapStatePropsType = {\r\n    profile: ProfilesType\r\n    status: string\r\n    authorizedUserId: number\r\n    isAuth: boolean\r\n}\r\ntype MapDispatchPropsType = {\r\n    getUserProfile: (userId: number) => void\r\n    getStatus: (userId: number) => void\r\n    updateStatus: (status: string) => void\r\n}\r\nexport type ProfileContainerPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n\r\n    componentDidMount() {\r\n        let userId = Number(this.props.match.params.userId);\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.data.userId,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps,\r\n        {\r\n            getUserProfile: getUserProfileTC,\r\n            getStatus: getStatusTC,\r\n            updateStatus: updateStatusTC\r\n        }), withRouter, withAuthRedirect)(ProfileContainer)"],"sourceRoot":""}